/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2022  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port Register File Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2008Q3V1
 *      comment:		
 *      configuration:	 -instname mem8 -words 256 -bits 8 -frequency 1 -ring_width 2.0 -mux 2 -write_mask off -wp_size 8 -top_layer "m6-m8_m4" -power_type rings -horiz met3 -vert met2 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 4 -asvm on -corners ff_1p32v_m55c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_m55c
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   aci
 *      Instance Name:  mem8
 *      Words:          256
 *      Word Width:     8
 *      Mux:            2
 *      Process:        tt_1p2v_25c
 *
 *      Creation Date:  2022-04-09 19:43:59Z
 *      Version:        2008Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "tt_1p2v_25c";
DESIGN              "mem8";

CELLDATA
area                   : 21826.617;
default_max_transition : 1.500;
ENDCELLDATA

PORTDATA
Q[7:0] : MAXCAP(0.650);
A[7:0] : CAP(0.013);
D[7:0] : CAP(0.003);
CLK : CAP(0.057), MAXTRANS(1.500);
WEN : CAP(0.018);
CEN : CAP(0.008);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(mem8_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(mem8_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(mem8_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(mem8_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(mem8_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(mem8_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(mem8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL
ARCDATA
setup_a_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.830, 0.865, 0.909, 0.997, 1.261, 1.700, 2.140", \
                          "0.798, 0.833, 0.877, 0.965, 1.229, 1.668, 2.107", \
                          "0.758, 0.793, 0.837, 0.925, 1.189, 1.628, 2.067", \
                          "0.678, 0.713, 0.757, 0.845, 1.108, 1.548, 1.987", \
                          "0.437, 0.472, 0.516, 0.604, 0.867, 1.307, 1.746", \
                          "0.035, 0.070, 0.114, 0.202, 0.466, 0.905, 1.345", \
                          "-0.366, -0.331, -0.287, -0.199, 0.064, 0.504, 0.943" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.350, 0.383, 0.424, 0.505, 0.750, 1.158, 1.565", \
                          "0.318, 0.351, 0.391, 0.473, 0.718, 1.125, 1.533", \
                          "0.278, 0.310, 0.351, 0.433, 0.678, 1.085, 1.493", \
                          "0.198, 0.230, 0.271, 0.353, 0.597, 1.005, 1.413", \
                          "-0.043, -0.011, 0.030, 0.112, 0.356, 0.764, 1.172", \
                          "-0.445, -0.412, -0.371, -0.290, -0.045, 0.363, 0.771", \
                          "-0.846, -0.814, -0.773, -0.691, -0.447, -0.039, 0.369" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_a_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.023, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.063, 0.028, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.144, 0.109, 0.065, 0.000, 0.000, 0.000, 0.000", \
                          "0.385, 0.349, 0.305, 0.218, 0.000, 0.000, 0.000", \
                          "0.786, 0.751, 0.707, 0.619, 0.355, 0.000, 0.000", \
                          "1.187, 1.152, 1.108, 1.020, 0.757, 0.317, 0.000" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.025, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.057, 0.024, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.097, 0.064, 0.023, 0.000, 0.000, 0.000, 0.000", \
                          "0.177, 0.144, 0.104, 0.022, 0.000, 0.000, 0.000", \
                          "0.418, 0.385, 0.345, 0.263, 0.018, 0.000, 0.000", \
                          "0.819, 0.787, 0.746, 0.664, 0.420, 0.012, 0.000", \
                          "1.221, 1.188, 1.147, 1.066, 0.821, 0.413, 0.006" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_d_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.252, 0.286, 0.327, 0.410, 0.659, 1.074, 1.490", \
                          "0.220, 0.253, 0.295, 0.378, 0.627, 1.042, 1.458", \
                          "0.180, 0.213, 0.255, 0.338, 0.587, 1.002, 1.417", \
                          "0.100, 0.133, 0.174, 0.258, 0.507, 0.922, 1.337", \
                          "-0.141, -0.108, -0.066, 0.017, 0.266, 0.681, 1.096", \
                          "-0.543, -0.509, -0.468, -0.385, -0.136, 0.280, 0.695", \
                          "-0.944, -0.911, -0.869, -0.786, -0.537, -0.122, 0.293" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.370, 0.402, 0.443, 0.524, 0.768, 1.175, 1.581", \
                          "0.338, 0.370, 0.411, 0.492, 0.736, 1.143, 1.549", \
                          "0.297, 0.330, 0.371, 0.452, 0.696, 1.103, 1.509", \
                          "0.217, 0.250, 0.290, 0.372, 0.616, 1.022, 1.429", \
                          "-0.024, 0.009, 0.049, 0.131, 0.375, 0.781, 1.188", \
                          "-0.425, -0.393, -0.352, -0.271, -0.027, 0.380, 0.787", \
                          "-0.827, -0.794, -0.753, -0.672, -0.428, -0.021, 0.385" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_d_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.009, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.041, 0.008, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.081, 0.048, 0.006, 0.000, 0.000, 0.000, 0.000", \
                          "0.161, 0.128, 0.087, 0.004, 0.000, 0.000, 0.000", \
                          "0.402, 0.369, 0.328, 0.244, 0.000, 0.000, 0.000", \
                          "0.804, 0.770, 0.729, 0.646, 0.397, 0.000, 0.000", \
                          "1.205, 1.172, 1.130, 1.047, 0.798, 0.383, 0.000" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.232, 0.200, 0.159, 0.078, 0.000, 0.000, 0.000", \
                          "0.634, 0.601, 0.561, 0.479, 0.235, 0.000, 0.000", \
                          "1.035, 1.003, 0.962, 0.881, 0.637, 0.230, 0.000" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_cen_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.560, 0.590, 0.629, 0.706, 0.936, 1.321, 1.705", \
                          "0.528, 0.558, 0.597, 0.674, 0.904, 1.289, 1.673", \
                          "0.487, 0.518, 0.557, 0.634, 0.864, 1.248, 1.633", \
                          "0.407, 0.438, 0.476, 0.553, 0.784, 1.168, 1.553", \
                          "0.166, 0.197, 0.235, 0.312, 0.543, 0.927, 1.312", \
                          "-0.235, -0.204, -0.166, -0.089, 0.142, 0.526, 0.910", \
                          "-0.637, -0.606, -0.567, -0.491, -0.260, 0.124, 0.509" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.642, 0.675, 0.717, 0.799, 1.048, 1.461, 1.875", \
                          "0.610, 0.643, 0.685, 0.767, 1.015, 1.429, 1.842", \
                          "0.570, 0.603, 0.645, 0.727, 0.975, 1.389, 1.802", \
                          "0.490, 0.523, 0.564, 0.647, 0.895, 1.309, 1.722", \
                          "0.249, 0.282, 0.323, 0.406, 0.654, 1.068, 1.481", \
                          "-0.153, -0.119, -0.078, 0.005, 0.253, 0.666, 1.080", \
                          "-0.554, -0.521, -0.480, -0.397, -0.149, 0.265, 0.678" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_cen_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.058, 0.028, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.460, 0.429, 0.391, 0.314, 0.083, 0.000, 0.000", \
                          "0.861, 0.830, 0.792, 0.715, 0.485, 0.100, 0.000" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.370, 0.337, 0.295, 0.213, 0.000, 0.000, 0.000", \
                          "0.771, 0.738, 0.697, 0.614, 0.366, 0.000, 0.000" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_wen_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.417, 0.450, 0.490, 0.572, 0.817, 1.225, 1.632", \
                          "0.385, 0.418, 0.458, 0.540, 0.785, 1.192, 1.600", \
                          "0.345, 0.377, 0.418, 0.500, 0.744, 1.152, 1.560", \
                          "0.265, 0.297, 0.338, 0.419, 0.664, 1.072, 1.480", \
                          "0.024, 0.056, 0.097, 0.179, 0.423, 0.831, 1.239", \
                          "-0.378, -0.345, -0.304, -0.223, 0.022, 0.430, 0.837", \
                          "-0.779, -0.747, -0.706, -0.624, -0.380, 0.028, 0.436" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.527, 0.555, 0.589, 0.659, 0.869, 1.219, 1.569", \
                          "0.494, 0.522, 0.557, 0.627, 0.837, 1.187, 1.537", \
                          "0.454, 0.482, 0.517, 0.587, 0.797, 1.147, 1.497", \
                          "0.374, 0.402, 0.437, 0.507, 0.717, 1.067, 1.416", \
                          "0.133, 0.161, 0.196, 0.266, 0.476, 0.826, 1.175", \
                          "-0.268, -0.240, -0.205, -0.135, 0.074, 0.424, 0.774", \
                          "-0.670, -0.642, -0.607, -0.537, -0.327, 0.023, 0.373" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_wen_A:
                        rise_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.027, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.108, 0.075, 0.034, 0.000, 0.000, 0.000, 0.000", \
                          "0.349, 0.316, 0.275, 0.194, 0.000, 0.000, 0.000", \
                          "0.750, 0.717, 0.677, 0.595, 0.350, 0.000, 0.000", \
                          "1.151, 1.119, 1.078, 0.997, 0.752, 0.344, 0.000" \
                        )
                        }
                        fall_constraint(mem8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.041, 0.013, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.121, 0.093, 0.058, 0.000, 0.000, 0.000, 0.000", \
                          "0.362, 0.334, 0.299, 0.229, 0.019, 0.000, 0.000", \
                          "0.763, 0.735, 0.700, 0.630, 0.420, 0.071, 0.000", \
                          "1.165, 1.137, 1.102, 1.032, 0.822, 0.472, 0.122" \
                        )
                        }
ENDARCDATA


ARCDATA
period_clk_0_A:
                        rise_constraint(scalar) {
                                values ("3.841")
                        }
                        fall_constraint(scalar) {
                                values ("3.841")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_h_0_A:
                        rise_constraint(scalar) {
                                values ("0.355")
                        }
                        fall_constraint(scalar) {
                                values ("0.355")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_l_0_A:
                        rise_constraint(scalar) {
                                values ("0.585")
                        }
                        fall_constraint(scalar) {
                                values ("0.585")
                        }
ENDARCDATA
ARCDATA
dly_clk_q_0_A:
                        cell_rise(mem8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.020, 0.040, 0.090, 0.220, 0.430, 0.650");
                        values ( \
                          "1.876, 1.898, 1.920, 1.974, 2.116, 2.345, 2.585", \
                          "1.908, 1.930, 1.952, 2.006, 2.148, 2.377, 2.617", \
                          "1.948, 1.970, 1.992, 2.047, 2.188, 2.417, 2.657", \
                          "2.029, 2.051, 2.072, 2.127, 2.269, 2.497, 2.737", \
                          "2.270, 2.291, 2.313, 2.368, 2.509, 2.738, 2.978", \
                          "2.671, 2.693, 2.715, 2.769, 2.911, 3.140, 3.379", \
                          "3.073, 3.094, 3.116, 3.171, 3.312, 3.541, 3.781" \
                        )
                        }
                        rise_transition(mem8_mem_out_slew_template) {
                        index_1 ("0.000, 0.020, 0.040, 0.090, 0.220, 0.430, 0.650");
                        values ("0.050, 0.102, 0.155, 0.285, 0.623, 1.170, 1.743")
                        }
                        cell_fall(mem8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.020, 0.040, 0.090, 0.220, 0.430, 0.650");
                        values ( \
                          "1.876, 1.898, 1.920, 1.974, 2.116, 2.345, 2.585", \
                          "1.908, 1.930, 1.952, 2.006, 2.148, 2.377, 2.617", \
                          "1.948, 1.970, 1.992, 2.047, 2.188, 2.417, 2.657", \
                          "2.029, 2.051, 2.072, 2.127, 2.269, 2.497, 2.737", \
                          "2.270, 2.291, 2.313, 2.368, 2.509, 2.738, 2.978", \
                          "2.671, 2.693, 2.715, 2.769, 2.911, 3.140, 3.379", \
                          "3.073, 3.094, 3.116, 3.171, 3.312, 3.541, 3.781" \
                        )
                        }
                        fall_transition(mem8_mem_out_slew_template) {
                        index_1 ("0.000, 0.020, 0.040, 0.090, 0.220, 0.430, 0.650");
                        values ("0.055, 0.118, 0.181, 0.339, 0.749, 1.412, 2.107")
                        }
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
